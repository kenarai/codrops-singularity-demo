@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;

  font-size: 12px;
  /* --color-text: #000000; */
  --color-bg: #ffffff;
  --color-link: #000000;
  --color-link-hover: #000000;
  --page-padding: 1.5rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  /* font-family: Arial, Helvetica, sans-serif; */
  margin: 0;
  /* color: var(--color-text); */
  background-color: var(--color-bg);
  /* font-family: ui-monospace, monospace; */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


*,
*::after,
*::before {
  box-sizing: border-box;
}



@media (scripting: enabled) {
  .loading {

    &::before,
    &::after {
      content: '';
      position: fixed;
      z-index: 10000;
    }

    &::before {
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--color-bg);
    }

    &::after {
      top: 50%;
      left: 50%;
      width: 100px;
      height: 1px;
      margin: 0 0 0 -50px;
      background: var(--color-link);
      animation: loaderAnim 1.5s ease-in-out infinite alternate forwards;
    }

    @keyframes loaderAnim {
      0% {
        transform: scaleX(0);
        transform-origin: 0% 50%;
      }

      50% {
        transform: scaleX(1);
        transform-origin: 0% 50%;
      }

      50.1% {
        transform: scaleX(1);
        transform-origin: 100% 50%;
      }

      100% {
        transform: scaleX(0);
        transform-origin: 100% 50%;
      }
    }
  }
}

a {
  text-decoration: none;
  color: var(--color-link);
  outline: none;
  cursor: pointer;

  &:hover {
    text-decoration: underline;
    color: var(--color-link-hover);
  }

  &:focus {
    outline: none;
    background: lightgrey;

    &:not(:focus-visible) {
      background: transparent;
    }

    &:focus-visible {
      outline: 2px solid red;
      background: transparent;
    }
  }
}

.white>a {
  color: #fff;
}

.frame {





  display: grid;
  z-index: 2;

  grid-row-gap: 1rem;
  grid-column-gap: 2rem;
  pointer-events: none;
  justify-items: start;




  padding: var(--page-padding);
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  grid-template-columns: auto auto auto auto 1fr;
  grid-template-rows: auto auto;
  align-content: space-between;
  grid-template-areas:
    'title back github archive demos'
    'tags tags tags sponsor sponsor';

  .frame__tags {
    align-self: end;
  }

  .frame__demos,
  #cdawrap {
    justify-self: end;
    text-align: right;
    max-width: 300px;
  }

  #cdawrap {
    justify-self: start;
    grid-area: sponsor;
  }

  a,
  button {
    pointer-events: auto;
  }

  .frame__title {
    grid-area: title;
    font-size: inherit;
    margin: 0;
  }

  .frame__back {
    grid-area: back;
    justify-self: start;
  }

  .frame__archive {
    grid-area: archive;
    justify-self: start;
  }

  .frame__github {
    grid-area: github;
  }

  .frame__tags {
    grid-area: tags;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .frame__demos {
    grid-area: demos;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }


}

.content {
  /* padding: var(--page-padding); */
  display: flex;
  flex-direction: column;
  width: 100vw;
  position: relative;

  @media screen and (min-width: 53em) {
    min-height: 100vh;
    justify-content: center;
    align-items: center;
  }
}